{"version":3,"sources":["utils/request.ts","pages/listCustomer/listCustomer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ResponseError","response","statusText","Error","parseJSON","status","json","checkStatus","error","request","url","options","a","fetch","fetchResponse","Header","Layout","Content","Footer","SiteLayoutContent","styled","div","ListCustomer","useState","hits","setData","setIsError","setIsLoading","useEffect","result","data","fetchData","className","theme","mode","defaultSelectedKeys","Item","style","padding","margin","textAlign","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAAaA,EAAb,kDAGI,WAAYC,GAAqB,IAAD,8BAC9B,cAAMA,EAASC,aAHVD,cAEyB,EAE9B,EAAKA,SAAWA,EAFc,EAHpC,sBAAmCE,QAenC,SAASC,EAAUH,GACjB,OAAwB,MAApBA,EAASI,QAAsC,MAApBJ,EAASI,OAC/B,KAEFJ,EAASK,OAUlB,SAASC,EAAYN,GACnB,GAAIA,EAASI,QAAU,KAAOJ,EAASI,OAAS,IAC9C,OAAOJ,EAGT,IAAMO,EAAQ,IAAIR,EAAcC,GAEhC,MADAO,EAAMP,SAAWA,EACXO,EAWO,SAAeC,EAA9B,oC,4CAAe,WACbC,EACAC,GAFa,iBAAAC,EAAA,sEAIeC,MAAMH,EAAKC,GAJ1B,cAIPG,EAJO,gBAKUP,EAAYO,GALtB,cAKPb,EALO,yBAMNG,EAAUH,IANJ,4C,oCC1CPc,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OAEnBC,EAAoBC,IAAOC,IAAV,6FAqDRC,EAhDM,WACnB,MAAwBC,mBAAS,CAAEC,KAAM,KAAzC,mBAAaC,GAAb,WACA,EAA8BF,oBAAS,GAAvC,mBAAgBG,GAAhB,WACA,EAAkCH,oBAAS,GAA3C,mBAAkBI,GAAlB,WACA,EAAsBJ,mBACpB,oDADF,mBAAOb,EAAP,UAmBA,OAfAkB,qBAAU,YACO,uCAAG,4BAAAhB,EAAA,6DAChBc,GAAW,GACXC,GAAa,GAFG,kBAIOlB,EAAQC,GAJf,OAIRmB,EAJQ,OAKdJ,EAAQI,EAAOC,MALD,gDAOdJ,GAAW,GAPG,QAShBC,GAAa,GATG,yDAAH,qDAWfI,KACC,CAACrB,IAGF,eAAC,IAAD,CAAQsB,UAAU,SAAlB,UACE,eAACjB,EAAD,WACE,qBAAKiB,UAAU,SACf,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAA3D,UACE,cAAC,IAAKC,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,sBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,WAGnB,eAACnB,EAAD,CAASoB,MAAO,CAAEC,QAAS,UAA3B,UACE,eAAC,IAAD,CAAYD,MAAO,CAAEE,OAAQ,UAA7B,UACE,cAAC,IAAWH,KAAZ,mBACA,cAAC,IAAWA,KAAZ,mBACA,cAAC,IAAWA,KAAZ,qBAEF,cAACjB,EAAD,OAEF,cAACD,EAAD,CAAQmB,MAAO,CAAEG,UAAW,UAA5B,yCCtCSC,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,SCO1BuB,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fdafae65.chunk.js","sourcesContent":["export class ResponseError extends Error {\n    public response: Response;\n\n    constructor(response: Response) {\n      super(response.statusText);\n      this.response = response;\n    }\n}\n/**\n   * Parses the JSON returned by a network request\n   *\n   * @param  {object} response A response from a network request\n   *\n   * @return {object}          The parsed JSON from the request\n   */\nfunction parseJSON(response: Response) {\n  if (response.status === 204 || response.status === 205) {\n    return null;\n  }\n  return response.json();\n}\n\n/**\n   * Checks if a network request came back fine, and throws an error if not\n   *\n   * @param  {object} response   A response from a network request\n   *\n   * @return {object|undefined} Returns either the response, or throws an error\n   */\nfunction checkStatus(response: Response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const error = new ResponseError(response);\n  error.response = response;\n  throw error;\n}\n\n/**\n   * Requests a URL, returning a promise\n   *\n   * @param  {string} url       The URL we want to request\n   * @param  {object} [options] The options we want to pass to \"fetch\"\n   *\n   * @return {object}           The response data\n   */\nexport default async function request(\n  url: string,\n  options?: RequestInit,\n): Promise<any | { err: ResponseError }> {\n  const fetchResponse = await fetch(url, options);\n  const response = await checkStatus(fetchResponse);\n  return parseJSON(response);\n}\n","import React, { useEffect, useState } from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport styled from 'styled-components';\nimport request from '../../utils/request';\n\nconst { Header, Content, Footer } = Layout;\n\nconst SiteLayoutContent = styled.div`\n    min-height: 280px;\n    padding: 24px;\n    background: #fff;`;\n\nconst ListCustomer = () => {\n  const [data, setData] = useState({ hits: [] });\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [url, setUrl] = useState(\n    'https://hn.algolia.com/api/v1/search?query=redux',\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n      try {\n        const result = await request(url);\n        setData(result.data);\n      } catch (error) {\n        setIsError(true);\n      }\n      setIsLoading(false);\n    };\n    fetchData();\n  }, [url]);\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\n          <Menu.Item key=\"2\">Clientes</Menu.Item>\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '0 50px' }}>\n        <Breadcrumb style={{ margin: '16px 0' }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n          <Breadcrumb.Item>App</Breadcrumb.Item>\n        </Breadcrumb>\n        <SiteLayoutContent />\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>\n        DeveloperJulioCesarÂ®\n      </Footer>\n    </Layout>\n  );\n};\n\nexport default ListCustomer;\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport ListCustomer from './pages/listCustomer/listCustomer';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={ListCustomer} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}